My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20201201_NXV_new.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
##-------------------------
##  read file and replace
##-------------------------
library(dplyr)
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_PAN.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
write.csv(csv_before_filling,file = paste0(tools::file_path_sans_ext(My_file),'_HYZ.csv'),fileEncoding = "UTF-8",row.names = F)
##-------------------------
##  read file and replace
##-------------------------
library(dplyr)
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_SAF.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
##----------------------------------------------------------------
##                      set file directory here                  -
##----------------------------------------------------------------
filename<-'E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_SAF.csv'
Mother_CSV<-read.csv(filename,check.names=FALSE)
my_comment<-'ingrowth_core_num is NA, fill with 100'
#the below line is used to remove an empty column at the end of the csv file, this is due to
#https://stackoverflow.com/questions/10441437/why-am-i-getting-x-in-my-column-names-when-reading-a-data-frame
if(colnames(Mother_CSV)[length(Mother_CSV)]==""){Mother_CSV<-Mother_CSV[,-length(Mother_CSV)]}
#This line would check whether the column name for plot code is called "plot_code", otherwise, it asked the name for that column
if (is.null(Mother_CSV$comments)) {my.name <- readline(prompt="plot code column header: ")}
for (ii in 1:nrow(Mother_CSV)){
if(is.na(Mother_CSV[ii,'ingrowth_core_num'])){
Mother_CSV[ii,'ingrowth_core_num']<-'100'
Mother_CSV_comment<-Mother_CSV$comments[ii]
new_comment<-paste(Mother_CSV_comment,', ',my_comment,sep='')
Mother_CSV$comments[ii]<-new_comment
}
}
write.csv(Mother_CSV,file = paste0(tools::file_path_sans_ext(filename),'_HYZ.csv'),fileEncoding = "UTF-8",row.names = F)
##-------------------------
##  read file and replace
##-------------------------
library(dplyr)
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_SPD.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
write.csv(csv_before_filling,file = paste0(tools::file_path_sans_ext(My_file),'_HYZ.csv'),fileEncoding = "UTF-8",row.names = F)
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_STB.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
##-------------------------
##  read file and replace
##-------------------------
library(dplyr)
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_TAM.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
write.csv(csv_before_filling,file = paste0(tools::file_path_sans_ext(My_file),'_HYZ.csv'),fileEncoding = "UTF-8",row.names = F)
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_TAN.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_TRU.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
write.csv(csv_before_filling,file = paste0(tools::file_path_sans_ext(My_file),'_HYZ.csv'),fileEncoding = "UTF-8",row.names = F)
My_file<- "E:/RawData_for_database/what_I_need_to_upload/output_ic/ic_imported_20191107_WAY.csv"
csv_before_filling<-read.csv(My_file)
for (rownumber in 1:nrow(csv_before_filling)){
if (isTRUE(csv_before_filling[rownumber,'time_step']>=6)){
temp_num<-csv_before_filling[rownumber,'time_step_minutes']
csv_before_filling[rownumber,'time_step_minutes']<-csv_before_filling[rownumber,'time_step']
csv_before_filling[rownumber,'time_step']<-temp_num
print(paste0('modify', rownumber))
}
if (isTRUE(csv_before_filling[rownumber,'quality_code']=='poor')){csv_before_filling[rownumber,'quality_code']<-'not_sure'}
}
write.csv(csv_before_filling,file = paste0(tools::file_path_sans_ext(My_file),'_HYZ.csv'),fileEncoding = "UTF-8",row.names = F)
setwd("F:/Side_project/Beni/dgvm_analyses/Pugh_et_al_data/")
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf.rda")
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf.rda")
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf.RData")
source("Processed_data/df_to_grid.R")
rotate_matrix <- function(x) apply(t(x), 2, rev)
suppressMessages(library(raster))
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_init)%>%
df_to_grid(varnam = "npp_init")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'),xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
plot(map_kg_m2)
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_init<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_final)%>%
df_to_grid(varnam = "npp_final")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')  ,xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_final<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
print(paste("model name:",gdf$modl[model_num],"npp_init",round(npp_sum_init),"npp_sum_final",round(npp_sum_final)))
print(dim(npp_init))
}
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(readr)
library(stringr)
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf.RData")
source("Processed_data/df_to_grid.R")
rotate_matrix <- function(x) apply(t(x), 2, rev)
suppressMessages(library(raster))
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_init)%>%
df_to_grid(varnam = "npp_init")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'),xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
plot(map_kg_m2)
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_init<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_final)%>%
df_to_grid(varnam = "npp_final")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')  ,xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_final<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
print(paste("model name:",gdf$modl[model_num],"npp_init",round(npp_sum_init),"npp_sum_final",round(npp_sum_final)))
print(dim(npp_init))
}
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf.RData")
source("Processed_data/df_to_grid.R")
rotate_matrix <- function(x) apply(t(x), 2, rev)
suppressMessages(library(raster))
par(mfrow=c(2,3))
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_init)%>%
df_to_grid(varnam = "npp_init")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'),xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
plot(map_kg_m2)
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_init<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_final)%>%
df_to_grid(varnam = "npp_final")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')  ,xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_final<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
print(paste("model name:",gdf$modl[model_num],"npp_init",round(npp_sum_init),"npp_sum_final",round(npp_sum_final)))
print(dim(npp_init))
}
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
colnames(npp_init)<-gdf$modl[[model_num]]
print(gdf$modl[[model_num]])
print(npp_init[,1] %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T))
}
# availvars <- read_csv( "E:/Cesar_project_csoil/Trendy_v8_beni/dgvm_analyses-master/availvars_trendy_v8_S1.csv" )
setwd("F:/Side_project/Beni/dgvm_analyses/CMIP5") #This is the directory of this rmd file
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf_CMIP5.rda")
source("Processed_data/df_to_grid.R")
rotate_matrix <- function(x) apply(t(x), 2, rev)
suppressMessages(library(raster))
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_init)%>%
df_to_grid(varnam = "npp_init")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'),xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
plot(map_kg_m2)
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_init<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_final)%>%
df_to_grid(varnam = "npp_final")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')  ,xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_final<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
print(paste("model name:",gdf$modl[model_num],"npp_init",round(npp_sum_init),"npp_sum_final",round(npp_sum_final)))
print(dim(npp_init))
}
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
colnames(npp_init)<-gdf$modl[[model_num]]
print(gdf$modl[[model_num]])
print(npp_init[,1] %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T))
}
setwd("F:/Side_project/Beni/dgvm_analyses/Pugh_et_al_data/")
# filnams <- read_csv( "filnams_trendy_v8_S1.csv" ) %>%
filnams <- read_csv( "Processed_data/filnams_Pugh_S1.csv" ) %>%
setNames(c("modl", paste0("filn_", names(.)[-1])))
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(readr)
library(stringr)
setwd("F:/Side_project/Beni/dgvm_analyses/Pugh_et_al_data/")
# filnams <- read_csv( "filnams_trendy_v8_S1.csv" ) %>%
filnams <- read_csv( "Processed_data/filnams_Pugh_S1.csv" ) %>%
setNames(c("modl", paste0("filn_", names(.)[-1])))
modls <- filnams %>%
filter(!is.na(filn_cSoil) & !is.na(filn_cVeg) & !is.na(filn_npp)) %>%
## for separate aboveground biomass
filter(!is.na(filn_cWood) & !is.na(filn_cLeaf)) %>%
pull(modl)
source("Processed_data/collect_gdf_bymodl.R")
source("Processed_data/read_nc_onefile.R")
source("Processed_data/nc_to_df.R")
source("Processed_data/collect_gdf_bymodl.R")
modls <- filnams %>%
filter(!is.na(filn_cSoil) & !is.na(filn_cVeg) & !is.na(filn_npp)) %>%
## for separate aboveground biomass
filter(!is.na(filn_cWood) & !is.na(filn_cLeaf)) %>%
pull(modl)
df <- filnams %>%
## filter based on above
filter(modl %in% modls) %>%
# mutate(dir = paste0("/cluster/home/bestocke/data/trendy/v8/")) %>%
# mutate(dir = paste0("~/data/trendy/v8/")) %>%
mutate(dir = paste0("Processed_data")) %>%
mutate_at(vars(starts_with("filn")), ~str_replace(., "\\.nc", "")) %>%
mutate_at(vars(starts_with("filn")), ~str_replace(., "cleaf", "cLeaf")) %>%
mutate_at(vars(starts_with("filn")), ~str_replace(., "croot", "cRoot")) %>%
mutate_at(vars(starts_with("filn")), ~str_replace(., "csoil", "cSoil")) %>%
mutate_at(vars(starts_with("filn")), ~str_replace(., "cveg", "cVeg")) %>%
mutate_at(vars(starts_with("filn")), ~str_replace(., "cwood", "cWood")) %>%
mutate_at(vars(starts_with("filn")), ~str_replace(., "cRootf", "cRoot"))%>%
## get starting year
left_join(read_csv("Processed_data/startyear_Pugh_S1.csv"), by = "modl") %>%
rename(startyear_init = startyear, startyear_npp_init = startyear_npp) %>%
mutate(endyear_init = startyear_init + 9, endyear_npp_init = startyear_npp_init + 9) %>%
## create CDO command to convert flux (per seconds) to annual total (per year)
mutate(cmd_npp_units = paste("E:/RA/Pugh/processed_well_done/processed/get_tot_annCABLE_clleaction.sh", filn_npp, dir)) %>%
## create CDO command to take mean across years at simulation start and end
mutate(cmd_cVeg  = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_soc_biomass3.sh", filn_cVeg,  dir, startyear_init, endyear_init),
cmd_cSoil = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_soc_biomass3.sh", filn_cSoil, dir, startyear_init, endyear_init),
cmd_npp   = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_soc_biomass3.sh", filn_npp_ANN,  dir, startyear_npp_init, endyear_npp_init),
cmd_cLeaf = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_soc_biomass3.sh", filn_cLeaf, dir, startyear_init, endyear_init),
cmd_cWood = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_soc_biomass3.sh", filn_cWood, dir, startyear_init, endyear_init),
cmd_cRoot = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_soc_biomass3.sh", filn_cRoot, dir, startyear_init, endyear_init),
cmd_dcSoil = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_dsoc2.sh", filn_cSoil, dir),
cmd_dcVeg  = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_dsoc2.sh", filn_cVeg,  dir),
cmd_dcLeaf  = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_dsoc2.sh", filn_cLeaf,  dir),
cmd_dcWood  = paste("E:/RA/Pugh/processed_well_done/processed/proc_trendy_dsoc2.sh", filn_cWood,  dir)
) %>%
rowwise() %>%
mutate(filn_cVeg_init  = paste0(filn_cVeg, "_INIT_MEAN"),
filn_cVeg_final = paste0(filn_cVeg, "_FINAL_MEAN"),
filn_cLeaf_init  = paste0(filn_cLeaf, "_INIT_MEAN"),
filn_cLeaf_final = paste0(filn_cLeaf, "_FINAL_MEAN"),
filn_cRoot_init  = paste0(filn_cRoot, "_INIT_MEAN"),
filn_cRoot_final = paste0(filn_cRoot, "_FINAL_MEAN"),
filn_cWood_init  = paste0(filn_cWood, "_INIT_MEAN"),
filn_cWood_final = paste0(filn_cWood, "_FINAL_MEAN"),
filn_cSoil_init  = paste0(filn_cSoil, "_INIT_MEAN"),
filn_cSoil_final = paste0(filn_cSoil, "_FINAL_MEAN"),
filn_cSoil_change = paste0(filn_cSoil, "_CHANGE"),
filn_cVeg_change  = paste0(filn_cVeg, "_CHANGE"),
filn_cLeaf_change = paste0(filn_cLeaf, "_CHANGE"),
filn_cWood_change = paste0(filn_cWood, "_CHANGE"),
filn_npp_init  = paste0(filn_npp_ANN, "_INIT_MEAN"),
filn_npp_final = paste0(filn_npp_ANN, "_FINAL_MEAN")
)
#######change the variable name
#cabsoil<-nc_open('lpjml_cruncep_cSoil_annual_1901_2014_INIT_MEAN.nc')
#ncvarrename(cabsoil,'csoil_fast','csoil')
load('Processed_data/gdf.RData')
source("Processed_data/collect_gdf_bymodl.R")
source("Processed_data/read_nc_onefile.R")
source("Processed_data/nc_to_df.R")
source("Processed_data/collect_gdf_bymodl.R")
gdf <- purrr::map(
as.list(seq(nrow(df))),
~collect_gdf_bymodl(
df$modl[.],
df$dir[.],
df$filn_cSoil_init[.],
df$filn_cSoil_final[.],
df$filn_cVeg_init[.],
df$filn_cVeg_final[.],
df$filn_cLeaf_init[.],
df$filn_cLeaf_final[.],
df$filn_cRoot_init[.],
df$filn_cRoot_final[.],
df$filn_cWood_init[.],
df$filn_cWood_final[.],
df$filn_npp_init[.],
df$filn_npp_final[.],
df$filn_cSoil_change[.],
df$filn_cVeg_change[.]
)) %>%
bind_rows() %>%
## get aboveground biomass as sum of cWood and cLeaf
mutate(cveg_ag_init = cleaf_init + cwood_init,
cveg_ag_final = cleaf_final + cwood_final
) %>%
group_by(modl) %>%
nest()
boxup('load gdf here if you don't want to make it yourself with above codes)
boxup('load gdf here if you don\'t want to make it yourself with above codes)
\
)
)
/
\\\
)({}{}}})
/
/
///
]
\
\
\
\\
''
''
''
boxup('load gdf here if you don/'t want to make it yourself with above codes)
boxup('load gdf here if you dont want to make it yourself with above codes)
''
'
boxup('load gdf here if you dont want to make it yourself with above codes')
### Biomass vs. NPP change
## just one model
source("Processed_data/analyse_modobs2.R")
source("Processed_data/LSD.heatscatter.R")
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf.RData")
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf.RData")
source("Processed_data/df_to_grid.R")
rotate_matrix <- function(x) apply(t(x), 2, rev)
suppressMessages(library(raster))
par(mfrow=c(2,3))
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_init)%>%
df_to_grid(varnam = "npp_init")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'),xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
plot(map_kg_m2)
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_init<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_final)%>%
df_to_grid(varnam = "npp_final")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')  ,xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_final<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
print(paste("model name:",gdf$modl[model_num],"npp_init",round(npp_sum_init),"npp_sum_final",round(npp_sum_final)))
print(dim(npp_init))
}
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
colnames(npp_init)<-gdf$modl[[model_num]]
print(gdf$modl[[model_num]])
print(npp_init[,1] %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T))
}
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
colnames(npp_init)<-gdf$modl[[model_num]]
print(gdf$modl[[model_num]])
print(csoil_change[,1] %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T))
}
colnames(npp_init)
gdf$modl[[model_num]]
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
View(npp_init)
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
colnames(npp_init)<-gdf$modl[[model_num]]
print(gdf$modl[[model_num]])
print(npp_init[,1] %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T))
}
df_treegrass <- read_csv("F:/Side_project/Beni/dgvm_analyses/pft_tree_grass_trendy_v8.csv")
View(df_treegrass)
as.list(seq(nrow(df_treegrass)))
get_tree_pft_id(slice(df_treegrass, 1))
slice(df_treegrass, 1)
section('This file was used to calculate soil N soil P and soil moisture for plots in Ghana, soil moisture will source from Soil respiration measurement, and soil NP data was downloaded from a excel file shared by Yadvinder')
section('This file was used to calculate soil N soil P and soil moisture for plots in Ghana, soil moisture will source from Soil respiration measurement, and soil NP data was downloaded from a excel file shared by Yadvinder',emph = F)
