df$filn_cVeg_final[.],
df$filn_cLeaf_init[.],
df$filn_cLeaf_final[.],
df$filn_cRoot_init[.],
df$filn_cRoot_final[.],
df$filn_cWood_init[.],
df$filn_cWood_final[.],
df$filn_npp_init[.],
df$filn_npp_final[.],
df$filn_cSoil_change[.]
)
)
# availvars <- read_csv( "E:/Cesar_project_csoil/Trendy_v8_beni/dgvm_analyses-master/availvars_trendy_v8_S1.csv" )
setwd("F:/Side_project/Beni/dgvm_analyses/CMIP5") #This is the directory of this rmd file
filnams <- read_csv( "Processed_data/filnams_CMIP5.csv" ) %>%
setNames(c("modl", paste0("filn_", names(.)[-1])))
modls <- filnams %>%
filter(!is.na(filn_cSoil) & !is.na(filn_cLeaf) & !is.na(filn_cWood)) %>%
## remove LPX-Bern because files cannot be processed by CDO (dimensions messed up)
filter(modl != "LPX-Bern") %>%
pull(modl)
df <- filnams %>%
filter(modl %in% modls) %>%
# mutate(dir = paste0("/cluster/home/bestocke/data/trendy/v8/")) %>%
mutate(dir = paste0("Processed_data")) %>%
mutate_at(1:10, ~str_replace(., ".nc", "")) %>%
## create CDO command to take mean across years at simulation start and end
mutate(cmd_cVeg  = paste("./proc_trendy_soc_biomass.sh", filn_cVeg,  dir),
cmd_npp   = paste("./proc_trendy_soc_biomass.sh", filn_npp ,  dir),
cmd_cSoil = paste("./proc_trendy_soc_biomass.sh", filn_cSoil, dir),
cmd_cLeaf = paste("./proc_trendy_soc_biomass.sh", filn_cLeaf, dir),
cmd_cWood = paste("./proc_trendy_soc_biomass.sh", filn_cWood, dir),
cmd_cRoot = paste("./proc_trendy_soc_biomass.sh", filn_cRoot, dir),
cmd_dcSoil = paste("./proc_trendy_dsoc.sh", filn_cSoil, dir),
) %>%
rowwise() %>%
mutate(filn_cVeg_init  = paste0(filn_cVeg, "_INIT_MEAN"),
filn_cVeg_final = paste0(filn_cVeg, "_FINAL_MEAN"),
filn_cLeaf_init  = paste0(filn_cLeaf, "_INIT_MEAN"),
filn_cLeaf_final = paste0(filn_cLeaf, "_FINAL_MEAN"),
filn_cRoot_init  = paste0(filn_cRoot, "_INIT_MEAN"),
filn_cRoot_final = paste0(filn_cRoot, "_FINAL_MEAN"),
filn_cWood_init  = paste0(filn_cWood, "_INIT_MEAN"),
filn_cWood_final = paste0(filn_cWood, "_FINAL_MEAN"),
filn_cSoil_init  = paste0(filn_cSoil, "_INIT_MEAN"),
filn_cSoil_final = paste0(filn_cSoil, "_FINAL_MEAN"),
filn_cSoil_change = paste0(filn_cSoil, "_CHANGE"),
filn_npp_init  = paste0(filn_npp, "_INIT_MEAN"),
filn_npp_final = paste0(filn_npp, "_FINAL_MEAN")
)
filn_npp_init  = paste0(filn_npp, "_INIT_MEAN"),
df <- filnams %>%
filter(modl %in% modls) %>%
# mutate(dir = paste0("/cluster/home/bestocke/data/trendy/v8/")) %>%
mutate(dir = paste0("Processed_data")) %>%
mutate_at(1:10, ~str_replace(., ".nc", "")) %>%
## create CDO command to take mean across years at simulation start and end
mutate(cmd_cVeg  = paste("./proc_trendy_soc_biomass.sh", filn_cVeg,  dir),
cmd_npp   = paste("./proc_trendy_soc_biomass.sh", filn_npp ,  dir),
cmd_cSoil = paste("./proc_trendy_soc_biomass.sh", filn_cSoil, dir),
cmd_cLeaf = paste("./proc_trendy_soc_biomass.sh", filn_cLeaf, dir),
cmd_cWood = paste("./proc_trendy_soc_biomass.sh", filn_cWood, dir),
cmd_cRoot = paste("./proc_trendy_soc_biomass.sh", filn_cRoot, dir),
cmd_dcSoil = paste("./proc_trendy_dsoc.sh", filn_cSoil, dir),
) %>%
rowwise() %>%
mutate(filn_cVeg_init  = paste0(filn_cVeg, "_INIT_MEAN"),
filn_cVeg_final = paste0(filn_cVeg, "_FINAL_MEAN"),
filn_cLeaf_init  = paste0(filn_cLeaf, "_INIT_MEAN"),
filn_cLeaf_final = paste0(filn_cLeaf, "_FINAL_MEAN"),
filn_cRoot_init  = paste0(filn_cRoot, "_INIT_MEAN"),
filn_cRoot_final = paste0(filn_cRoot, "_FINAL_MEAN"),
filn_cWood_init  = paste0(filn_cWood, "_INIT_MEAN"),
filn_cWood_final = paste0(filn_cWood, "_FINAL_MEAN"),
filn_cSoil_init  = paste0(filn_cSoil, "_INIT_MEAN"),
filn_cSoil_final = paste0(filn_cSoil, "_FINAL_MEAN"),
filn_cSoil_change = paste0(filn_cSoil, "_CHANGE"),
filn_npp_init  = paste0(filn_npp, "_INIT_MEAN"),
filn_npp_final = paste0(filn_npp, "_FINAL_MEAN")
)
filn_npp_init  = paste0(filn_npp, "_INIT_MEAN"),
Execute function using CDO.
(we are not doing this for CMIP5 ,because INIT and FINAL files were prepared by matlab codes, not cdo)
```{r}
# out <- purrr::map(as.list(df %>% pull(cmd_cVeg)),  ~system(., intern = TRUE))
# out <- purrr::map(as.list(df %>% pull(cmd_cLeaf)),  ~system(., intern = TRUE))
# out <- purrr::map(as.list(df %>% pull(cmd_cWood)),  ~system(., intern = TRUE))
# out <- purrr::map(as.list(df %>% pull(cmd_cRoot)),  ~system(., intern = TRUE))
# out <- purrr::map(as.list(df %>% pull(cmd_npp)),   ~system(., intern = TRUE))
# out <- purrr::map(as.list(df %>% pull(cmd_cSoil)), ~system(., intern = TRUE))
# out <- purrr::map(as.list(df %>% pull(cmd_dcSoil)), ~system(., intern = TRUE))
```
#please find these R functions by searching rbeni github
source("Processed_data/collect_gdf_bymodl.R")
source("Processed_data/read_nc_onefile.R")
source("Processed_data/nc_to_df.R")
gdf <- purrr::map(
as.list(seq(nrow(df))),
~collect_gdf_bymodl(
df$modl[.],
df$dir[.],
df$filn_cSoil_init[.],
df$filn_cSoil_final[.],
df$filn_cVeg_init[.],
df$filn_cVeg_final[.],
df$filn_cLeaf_init[.],
df$filn_cLeaf_final[.],
df$filn_cRoot_init[.],
df$filn_cRoot_final[.],
df$filn_cWood_init[.],
df$filn_cWood_final[.],
df$filn_npp_init[.],
df$filn_npp_final[.],
df$filn_cSoil_change[.]
)
)
names(gdf) <- df$modl
gdf <- gdf %>%
bind_rows(.id = "modl") %>%
## get aboveground biomass as sum of cWood and cLeaf
mutate(cveg_ag_init = cleaf_init + cwood_init,
cveg_ag_final = cleaf_final + cwood_final
) %>%
group_by(modl) %>%
nest()
testdf <- gdf$data[[5]] %>%
mutate(dnpp = npp_final / npp_init)
testdf$dnpp %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T)
get_deltas <- function(df){
df %>%
mutate(dcveg = (cveg_final - cveg_init)/cveg_init,
dcveg_ag = (cveg_ag_final - cveg_ag_init)/cveg_ag_init,
dnpp = (npp_final - npp_init)/npp_init,
dcsoil = (csoil_final - csoil_init)/csoil_init,
dcsoil_star = (csoil_star_final - csoil_star_init)/csoil_star_init
)
}
get_csoil_star <- function(df){
df %>%
mutate(csoil_star_init  = csoil_init) %>%
# mutate(csoil_change = csoil_final - csoil_init) %>%   # overwriting what's read from file - XXX This was wrong XXX
mutate(csoil_change = csoil_change / 50.0) %>%
mutate(csoil_star_final = csoil_final / (1.0 - (csoil_change/1)/npp_final ))
}
gdf <- gdf %>%
mutate(data = purrr::map(data, ~get_csoil_star(.))) %>%
mutate(data = purrr::map(data, ~get_deltas(.)))
save(gdf,file="/Processed_data/gdf_CMIP5.rda")
save(gdf,file="Processed_data/gdf_CMIP5.rda")
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf_CMIP5.rda")
##::::::::::::::::::::::::::::
##  check globally total NPP
##::::::::::::::::::::::::::::
load("Processed_data/gdf_CMIP5.rda")
source("Processed_data/df_to_grid.R")
source("Processed_data/df_to_grid.R")
source("Processed_data/df_to_grid.R")
rotate_matrix <- function(x) apply(t(x), 2, rev)
suppressMessages(library(raster))
suppressMessages(library(raster))
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_init)%>%
df_to_grid(varnam = "npp_init")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'),xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
plot(map_kg_m2)
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_init<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(lon,lat,npp_final)%>%
df_to_grid(varnam = "npp_final")%>%
rotate_matrix()
map_kg_m2 <-raster::raster(npp_init,crs=sp::CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')  ,xmn=0, xmx=360,
ymn=-90, ymx=+90) #unit: kg/m2, it was kg/m2/s but has been converted in collect_gdf_bymodl.R
a <- raster::area(map_kg_m2)
map_MgPixel <- map_kg_m2 * a * 1000000 #convert /s to /year and convert km2 to m2
npp_sum_final<-cellStats(map_MgPixel,"sum", na.rm=T) * 10^(-12) #from kg to Pg
print(paste("model name:",gdf$modl[model_num],"npp_init",round(npp_sum_init),"npp_sum_final",round(npp_sum_final)))
print(dim(npp_init))
}
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
colnames(npp_init)<-gdf$modl[[model_num]]
print(gdf$modl[[model_num]])
print(npp_init[,1] %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T))
}
for (model_num in 1:nrow(gdf)){
npp_init<-gdf$data[[model_num]]%>%
dplyr::select(csoil_change,npp_final)%>%
mutate(Beni_checker=csoil_change/npp_final)%>%
dplyr::select(Beni_checker)
colnames(npp_init)<-gdf$modl[[model_num]]
print(gdf$modl[[model_num]])
print(npp_init[,1] %>% quantile(., probs = c(0.1, 0.5, 0.9), na.rm=T))
}
## just one model
source("Processed_data/analyse_modobs2.R")
source("Processed_data/LSD.heatscatter.R")
library(ggplot2)
modobs <- gdf$data[[3]] %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
analyse_modobs2("dnpp", "dcveg", type = "heat", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs <- gdf$data[[3]] %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
analyse_modobs2("dnpp", "dcveg", type = "heat", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs$gg +
xlim(c(-0.5,1)) + ylim(c(-0.5,1)) +
labs(title = gdf$modl[[2]])
modobs <- gdf$data[[3]] %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
analyse_modobs2("dnpp", "dcveg", type = "heat", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs$gg +
xlim(c(-0.5,1)) + ylim(c(-0.5,1)) +
labs(title = gdf$modl[[2]])
## all models pooled
gdf %>%
unnest(data) %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
ggplot(aes(x = dnpp, y = dcveg)) +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5))
modobs <- gdf$data[[3]] %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
analyse_modobs2("dnpp", "dcveg", type = "heat", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs$gg +
xlim(c(-0.5,1)) + ylim(c(-0.5,1)) +
labs(title = gdf$modl[[2]])
## all models pooled
gdf %>%
unnest(data) %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
ggplot(aes(x = dnpp, y = dcveg)) +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5))
## all models separately (facet_grid)
gdf %>%
#dplyr::filter(modl != "CABLE-POP") %>%
unnest(data) %>%
bind_rows(
.,
gdf %>%
#    dplyr::filter(modl != "CABLE-POP") %>%
mutate(n = purrr::map_int(data, ~nrow(.))) %>%
mutate(data = purrr::map(data, ~slice_sample(., n = 4420))) %>% # smallest set here
unnest(data) %>%
mutate(modl = "ALL")
) %>%
dplyr::filter(dnpp>-0.9) %>% # remove points where veg collapses
dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
ggplot(aes(x = dnpp, y = dcveg)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.1, 0.9) + ylim(-0.1, 0.9) +
theme(legend.position = "none",
strip.background = element_blank())
ggsave("cveg_dnpp_CMIP5model_bymodl.pdf", width = 9, height = 7)
# modobs <- gdf %>%
#   unnest(data) %>%
#   dplyr::filter(dnpp < 2 & dnpp > -2 & dcveg < 2 & dcveg > -2) %>%
#   dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
#   analyse_modobs2("dnpp", "dcveg", type = "hex", plot_subtitle = FALSE, plot_linmod = FALSE)
# modobs$gg +
#   xlim(c(-0.5,1)) + ylim(c(-0.5,1)) +
#   labs(title = "All models pooled")
### SOC vs. NPP change
```{r}
## one model
modobs <- gdf$data[[2]] %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcsoil_star < 2 & dcsoil_star > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcsoil_star), !is.infinite(dnpp), !is.infinite(dcsoil_star)) %>%
analyse_modobs2("dnpp", "dcsoil_star", type = "heat", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs$gg +
xlim(c(-0.5,1)) + ylim(c(-0.5,1)) +
labs(title = gdf$modl[[2]])
## all models pooled
modobs <- gdf %>%
unnest(data) %>%
dplyr::filter(dnpp < 2 & dnpp > -2 & dcsoil_star < 2 & dcsoil_star > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcsoil_star), !is.infinite(dnpp), !is.infinite(dcsoil_star)) %>%
analyse_modobs2("dnpp", "dcsoil_star", type = "hex", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs$gg +
xlim(c(-0.1,0.7)) + ylim(c(-0.1,0.7)) +
labs(title = "All models pooled")
## cSoil* vs. NPP, all models separately (facet_grid)
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
unnest(data) %>%
bind_rows(
.,
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
mutate(n = purrr::map_int(data, ~nrow(.))) %>%
mutate(data = purrr::map(data, ~slice_sample(., n = 4420))) %>% # smallest set here
unnest(data) %>%
mutate(modl = "ALL")
) %>%
dplyr::filter(dcsoil_star < 2 & dcsoil_star > -2 & dnpp < 2 & dnpp > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dnpp), !is.infinite(dnpp), !is.infinite(dnpp)) %>%
ggplot(aes(x = dnpp, y = dcsoil_star)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.3, 1.2) + ylim(-0.3, 1.2) +
labs(x = expression(paste(Delta, "NPP", "/NPP")),
y = expression(paste(Delta, "C"[soil], "/C"[soil]))) +
theme(legend.position = "none",
strip.background = element_blank())
## cSoil* vs. NPP, all models separately (facet_grid)
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
unnest(data) %>%
bind_rows(
.,
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
mutate(n = purrr::map_int(data, ~nrow(.))) %>%
mutate(data = purrr::map(data, ~slice_sample(., n = 4420))) %>% # smallest set here
unnest(data) %>%
mutate(modl = "ALL")
) %>%
dplyr::filter(dcsoil_star < 2 & dcsoil_star > -2 & dnpp < 2 & dnpp > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dnpp), !is.infinite(dnpp), !is.infinite(dnpp)) %>%
ggplot(aes(x = dnpp, y = dcsoil_star)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.3, 1.2) + ylim(-0.3, 1.2) +
labs(x = expression(paste(Delta, "NPP", "/NPP")),
y = expression(paste(Delta, "C"[soil], "/C"[soil]))) +
theme(legend.position = "none",
strip.background = element_blank())
ggsave("csoil_dnpp_CMIP5model_bymodl.pdf", width = 9, height = 7)
## all models pooled
modobs <- gdf %>%
unnest(data) %>%
dplyr::filter(dcveg < 2 & dcveg > -2 & dcsoil_star < 2 & dcsoil_star > -2) %>%
dplyr::filter(!is.nan(dcveg), !is.nan(dcsoil_star), !is.infinite(dcveg), !is.infinite(dcsoil_star)) %>%
analyse_modobs2("dcveg", "dcsoil_star", type = "hex", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs$gg +
xlim(c(-0.1,0.7)) + ylim(c(-0.1,0.7)) +
labs(title = "All models pooled")
ggsave("csoil_cveg_CMIP5model_bymodl.pdf", width = 9, height = 7)
## cSoil, all models separately (facet_grid)
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
unnest(data) %>%
bind_rows(
.,
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
mutate(n = purrr::map_int(data, ~nrow(.))) %>%
mutate(data = purrr::map(data, ~slice_sample(., n = 4420))) %>% # smallest set here
unnest(data) %>%
mutate(modl = "ALL")
) %>%
dplyr::filter(dcsoil < 2 & dcsoil > -2 & dcveg < 2 & dcveg > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg), !is.infinite(dnpp), !is.infinite(dcveg)) %>%
ggplot(aes(x = dcveg, y = dcsoil)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.1, 0.9) + ylim(-0.1, 0.9) +
theme(legend.position = "none",
strip.background = element_blank())
## all models pooled
modobs <- gdf %>%
unnest(data) %>%
dplyr::filter(dcveg_ag < 2 & dcveg_ag > -2 & dcsoil_star < 2 & dcsoil_star > -2) %>%
dplyr::filter(!is.nan(dcveg_ag), !is.nan(dcsoil_star), !is.infinite(dcveg_ag), !is.infinite(dcsoil_star)) %>%
analyse_modobs2("dcveg_ag", "dcsoil_star", type = "hex", plot_subtitle = FALSE, plot_linmod = FALSE)
modobs$gg +
xlim(c(-0.1,0.7)) + ylim(c(-0.1,0.7)) +
labs(title = "All models pooled")
## cSoil*, all models separately (facet_grid)
gdf %>%
# dplyr::filter(modl != "CABLE-POP") %>%
unnest(data) %>%
# bind_rows(
#   .,
#   gdf %>%
#     # dplyr::filter(modl != "CABLE-POP") %>%
#     mutate(n = purrr::map_int(data, ~nrow(.))) %>%
#     mutate(data = purrr::map(data, ~slice_sample(., n = 4420))) %>% # smallest set here
#     unnest(data) %>%
#     mutate(modl = "ALL")
# ) %>%
dplyr::filter(dcsoil_star < 2 & dcsoil_star > -2 & dcveg_ag < 2 & dcveg_ag > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg_ag), !is.infinite(dnpp), !is.infinite(dcveg_ag)) %>%
ggplot(aes(x = dcveg_ag, y = dcsoil_star)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
geom_vline(xintercept = 0, color = "grey50", size = 0.2) +
geom_hline(yintercept = 0, color = "grey50", size = 0.2) +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.5, 1.5) + ylim(-0.5, 1.5) +
labs(x = expression(paste(Delta, "C"[ag-veg], "/C"[ag-veg])),
y = expression(paste(Delta, "C"[soil], "/C"[soil]))) +
theme(legend.position = "none",
strip.background = element_blank())
## cSoil*, all models separately (facet_grid)
gdf %>%
# dplyr::filter(modl != "CABLE-POP") %>%
unnest(data) %>%
# bind_rows(
#   .,
#   gdf %>%
#     # dplyr::filter(modl != "CABLE-POP") %>%
#     mutate(n = purrr::map_int(data, ~nrow(.))) %>%
#     mutate(data = purrr::map(data, ~slice_sample(., n = 4420))) %>% # smallest set here
#     unnest(data) %>%
#     mutate(modl = "ALL")
# ) %>%
dplyr::filter(dcsoil_star < 2 & dcsoil_star > -2 & dcveg_ag < 2 & dcveg_ag > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg_ag), !is.infinite(dnpp), !is.infinite(dcveg_ag)) %>%
ggplot(aes(x = dcveg_ag, y = dcsoil_star)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
geom_vline(xintercept = 0, color = "grey50", size = 0.2) +
geom_hline(yintercept = 0, color = "grey50", size = 0.2) +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.5, 1.5) + ylim(-0.5, 1.5) +
labs(x = expression(paste(Delta, "C"[ag-veg], "/C"[ag-veg])),
y = expression(paste(Delta, "C"[soil], "/C"[soil]))) +
theme(legend.position = "none",
strip.background = element_blank())
ggsave("csoil_cveg_ag_CMIP5model_bymodl.pdf", width = 7, height = 7)
## cSoil*, all models pooled
gdf %>%
## sample 1957 points from each model (corresponds to the number of gridcell of the model with coarsest res.)
mutate(data = purrr::map(data, ~slice_sample(., n = 1957))) %>% # smallest set here
unnest(data) %>%
mutate(modl = "ALL") %>%
dplyr::filter(dcsoil_star < 2 & dcsoil_star > -2 & dcveg_ag < 2 & dcveg_ag > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg_ag), !is.infinite(dnpp), !is.infinite(dcveg_ag)) %>%
ggplot(aes(x = dcveg_ag, y = dcsoil_star)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
geom_vline(xintercept = 0, color = "grey50", size = 0.2) +
geom_hline(yintercept = 0, color = "grey50", size = 0.2) +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
# facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.5, 1.5) + ylim(-0.5, 1.5) +
labs(x = expression(paste(Delta, "C"[ag-veg], "/C"[ag-veg])),
y = expression(paste(Delta, "C"[soil], "/C"[soil]))) +
theme(legend.position = "none",
strip.background = element_blank())
## cSoil, all models separately (facet_grid)
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
unnest(data) %>%
bind_rows(
.,
gdf %>%
dplyr::filter(modl != "CABLE-POP") %>%
mutate(n = purrr::map_int(data, ~nrow(.))) %>%
mutate(data = purrr::map(data, ~slice_sample(., n = 4420))) %>% # smallest set here
unnest(data) %>%
mutate(modl = "ALL")
) %>%
dplyr::filter(dcsoil < 2 & dcsoil > -2 & dcveg_ag < 2 & dcveg_ag > -2) %>%
dplyr::filter(!is.nan(dnpp), !is.nan(dcveg_ag), !is.infinite(dnpp), !is.infinite(dcveg_ag)) %>%
ggplot(aes(x = dcveg_ag, y = dcsoil)) +
stat_density_2d(aes(fill = after_stat(nlevel)), geom = "polygon") +
theme_classic() +
geom_abline(intercept=0, slope=1, linetype="dotted") +
scale_fill_gradientn(colours = colorRampPalette( c("gray65", "navy", "red", "yellow"))(5),
guide = "legend") +
facet_wrap(. ~ modl, nrow = 3,  scales = "free") +
xlim(-0.1, 0.9) + ylim(-0.1, 0.9) +
theme(legend.position = "none",
strip.background = element_blank())
